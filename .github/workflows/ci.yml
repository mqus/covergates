name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: "${{ matrix.build_types }}"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      BUILD_TYPE: ${{ matrix.build_types }}

    strategy:
      fail-fast: false
      matrix:
        build_types: ["BACKEND", "FRONTEND"]

    services:
      gitea:
        image: blueworrybear/gitea-docker
        ports:
          - 3000:3000

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Golang
        if: env.BUILD_TYPE == 'BACKEND'
        uses: actions/setup-go@v2
        with:
          go-version: "1.16"

      - name: Go Lint
        if: env.BUILD_TYPE == 'BACKEND'
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run -v ./...

      - name: Go Test
        if: env.BUILD_TYPE == 'BACKEND'
        env:
          GITEA_SECRET: ${{ secrets.GITEA_SECRET }}
        run: |
          go test -tags="gitea" -coverprofile=coverage.out ./...

      - name: Go Report
        if: env.BUILD_TYPE == 'BACKEND'
        uses: covergates/github-actions@v1
        with:
          report-id: "bsi5dvi23akg00a0tgl0"
          report-type: "go"
          report-file: "./coverage.out"
          pull-request: "true"

      - name: Setup NPM
        if: env.BUILD_TYPE == 'FRONTEND'
        run: |
          cd web
          npm install

      - name: Frontend Lint
        if: env.BUILD_TYPE == 'FRONTEND'
        run: |
          cd web
          npm run lint -- --no-fix

      - name: Frontend Unit Test
        if: env.BUILD_TYPE == 'FRONTEND'
        run: |
          cd web
          npm run test:unit

      - name: Jest Report
        if: env.BUILD_TYPE == 'FRONTEND'
        uses: covergates/github-actions@v1
        with:
          report-id: "bsi5dvi23akg00a0tgl0"
          report-type: "lcov"
          report-file: "./web/coverage/lcov.info"
          pull-request: "true"
